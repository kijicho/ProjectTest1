import can

# def send_one():
#     # bus = can.interface.Bus(bustype='socketcan', channel=0, app_name="python-can", bitrate=500000)
#     with can.interface.Bus(bustype='vector', channel=0, app_name="python-can", bitrate=500000) as bus:
#         # bus = can.interface.Bus(bustype='socketcan', channel='vcan0', bitrate=500000)
#         msg = can.Message(
#             arbitration_id=0x770, data=[0x03, 0x22, 0xF1, 0x95], dlc=8, is_extended_id=False
#         )
#
#         try:
#             bus.send(msg)
#             print(f"Message sent on {bus.channel_info}")
#         except can.CanError:
#             print("Message NOT sent")
# send_one()

phisicalID = 0x770
extendedID = False

tx_bus = can.interface.Bus(bustype='vector', channel=0, app_name="python-can", bitrate=500000)
tx_msg = can.Message(
            arbitration_id=phisicalID, data=[0x03, 0x22, 0xF1, 0x95], dlc=8, is_extended_id=False
        )
try:
    tx_bus.send(tx_msg)
    print(f"Message sent on {bus.channel_info}")
except:
    print("Message NOT sent")

rx_bus = can.interface.Bus(bustype='vector', channel=0, app_name="python-can", bitrate=500000)
rx_msg = rx_bus.recv(timeout = 5)
print(rx_msg)
