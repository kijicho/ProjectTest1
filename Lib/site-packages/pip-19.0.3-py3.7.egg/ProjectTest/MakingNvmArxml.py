import re
import os
import xml.etree.ElementTree as ET
#XML을 보기 좋게 만들어 저장
from xml.dom import minidom
from xml.etree.ElementTree import Element, SubElement, ElementTree, dump
import uuid
import json

type_inform_dict = {
            'SHORT-NAME': 'SerialNumber',
            'NvMBlockManagementType': 'NVM_BLOCK_REDUNDANT',
            'NvMNvBlockNum': '2',
            'NvMBlockCrcType': 'NVM_CRC16',
            'NvMBlockUseCrc': '1',
            'NvMCalcRamBlockCrc': '1',
            'NvMNvBlockBaseNumber': '13',
            'NvMNvramBlockIdentifier': '13',
            'NvMNvBlockLength': '10',
            'NvMWriteVerificationDataSize': '10',
            'NvMBlockJobPriority': '1',
            'NvMSelectBlockForReadAll': '1',
            'NvMSelectBlockForWriteAll': '0',
            'NvMRamBlockDataAddress': '',
            'NvMSingleBlockCallback': '',
            'NvMRomBlockNum': '0',
            'NvMResistantToChangedSw': '0',
            'NvMWriteBlockOnce': '0',
            'NvMBlockWriteProt': '0',
            'NvMStaticBlockIDCheck': '0',
            'NvMWriteVerification': '0',
            'NvMNvramDeviceId': '0',
            'NvMBswMBlockStatusInformation': '0',
            'NvMBlockUseSyncMechanism': '0',
            'NvMDefaultROMCRCEnabled': '0',
            'NvMMaxNumOfReadRetries': '1',
            'NvMMaxNumOfWriteRetries': '1',
            'NvMNameOfFeeBlock': ''
         }

# 보기 좋게 xml 만드는 함수, 줄바꿈, 들여쓰기 작업
def indent(elem, level=0): #자료 출처 https://goo.gl/J8VoDK
    i = "\n" + level*"  "
    if len(elem):
        if not elem.text or not elem.text.strip():
            elem.text = i + "  "
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
        for elem in elem:
            indent(elem, level+1)
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
    else:
        if level and (not elem.tail or not elem.tail.strip()):
            elem.tail = i

#file 불러오기
target_path = 'C:\\test_python_making_arxml\\Ecud_NvM.arxml'        #원본
targetXML = open(target_path, 'rt', encoding='UTF8')

ET.register_namespace('',"http://autosar.org/schema/r4.0")
ET.register_namespace('xsi',"http://www.w3.org/2001/XMLSchema-instance")
#ET.register_namespace('schemaLocation',"http://autosar.org/schema/r4.0")
ns = {
    '':"http://autosar.org/schema/r4.0",
    'xsi':"http://www.w3.org/2001/XMLSchema-instance"
}

tree = ET.parse(targetXML)

root = tree.getroot()

nvm_list = [
    # ["PartNumber", "10", "3", "3", "1", "10", "Dem_PartNumber", "Rte_Call_NvM_PNJF_NvMBlock_PartNumber_JobFinished"],
    # ["HWVersion", "3", "3", "3", "2", "3", "Dem_HWVersion", "Rte_Call_NvM_PNJF_NvMBlock_HWVersion_JobFinished"],
    # ["Date", "4", "3", "3", "3", "4", "Dem_Date", "Rte_Call_NvM_PNJF_NvMBlock_Date_JobFinished"],
    # ["SerialNumber", "10", "3", "3", "4", "10", "Dem_SerialNumber",
    #  "Rte_Call_NvM_PNJF_NvMBlock_SerialNumber_JobFinished"],
    ["m_Security", "1", "3", "3", "5", "1", "Dem_m_Security", "Rte_Call_NvM_PNJF_NvMBlock_m_Security_JobFinished"],
    ["m_CSAC_Odometer", "4", "3", "3", "6", "4", "Dem_m_CSAC_Odometer",
     "Rte_Call_NvM_PNJF_NvMBlock_m_CSAC_Odometer_JobFinished"],
    ["m_CSAC_OdometerNotSave", "1", "3", "3", "7", "1", "Dem_m_CSAC_OdometerNotSave",
     "Rte_Call_NvM_PNJF_NvMBlock_m_CSAC_OdometerNotSave_JobFinished"],
    ["m_Security", "1", "3", "3", "8", "1", "Dem_m_Security", "Rte_Call_NvM_PNJF_NvMBlock_m_Security_JobFinished"],
    ["m_AccumulatedCurrent_OTA", "1", "3", "3", "9", "1", "Dem_m_AccumulatedCurrent_OTA",
     "Rte_Call_NvM_PNJF_NvMBlock_m_AccumulatedCurrent_OTA_JobFinished"],
    ["m_ActualTime_OTA", "1", "3", "3", "10", "1", "Dem_m_ActualTime_OTA",
     "Rte_Call_NvM_PNJF_NvMBlock_m_ActualTime_OTA_JobFinished"],
    ["m_ACUOpt", "1", "3", "3", "11", "1", "Dem_m_ACUOpt", "Rte_Call_NvM_PNJF_NvMBlock_m_ACUOpt_JobFinished"],
    ["m_AutoDRLockModeState", "1", "3", "3", "12", "1", "Dem_m_AutoDRLockModeState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_AutoDRLockModeState_JobFinished"],
    ["m_AutoDRLockModeState_DriverOne", "1", "3", "3", "13", "1", "Dem_m_AutoDRLockModeState_DriverOne",
     "Rte_Call_NvM_PNJF_NvMBlock_m_AutoDRLockModeState_DriverOne_JobFinished"],
    ["m_AutoDRLockModeState_DriverTwo", "1", "3", "3", "14", "1", "Dem_m_AutoDRLockModeState_DriverTwo",
     "Rte_Call_NvM_PNJF_NvMBlock_m_AutoDRLockModeState_DriverTwo_JobFinished"],
    ["m_AutoDRLockModeState_Guest", "1", "3", "3", "15", "1", "Dem_m_AutoDRLockModeState_Guest",
     "Rte_Call_NvM_PNJF_NvMBlock_m_AutoDRLockModeState_Guest_JobFinished"],
    ["m_AutoDRUnlockModeState", "1", "3", "3", "16", "1", "Dem_m_AutoDRUnlockModeState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_AutoDRUnlockModeState_JobFinished"],
    ["m_AutoDRUnlockModeState_DriverOne", "1", "3", "3", "17", "1", "Dem_m_AutoDRUnlockModeState_DriverOne",
     "Rte_Call_NvM_PNJF_NvMBlock_m_AutoDRUnlockModeState_DriverOne_JobFinished"],
    ["m_AutoDRUnlockModeState_DriverTwo", "1", "3", "3", "18", "1", "Dem_m_AutoDRUnlockModeState_DriverTwo",
     "Rte_Call_NvM_PNJF_NvMBlock_m_AutoDRUnlockModeState_DriverTwo_JobFinished"],
    ["m_AutoDRUnlockModeState_Guest", "1", "3", "3", "19", "1", "Dem_m_AutoDRUnlockModeState_Guest",
     "Rte_Call_NvM_PNJF_NvMBlock_m_AutoDRUnlockModeState_Guest_JobFinished"],
    ["m_b_AssistDoorUnlockSW", "1", "3", "3", "20", "1", "Dem_m_b_AssistDoorUnlockSW",
     "Rte_Call_NvM_PNJF_NvMBlock_m_b_AssistDoorUnlockSW_JobFinished"],
    ["m_b_DeadLockOptionState", "1", "3", "3", "21", "1", "Dem_m_b_DeadLockOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_b_DeadLockOptionState_JobFinished"],
    ["m_b_DOMTaxiOptionState", "1", "3", "3", "22", "1", "Dem_m_b_DOMTaxiOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_b_DOMTaxiOptionState_JobFinished"],
    ["m_b_DriverDoorUnlockSW", "1", "3", "3", "23", "1", "Dem_m_b_DriverDoorUnlockSW",
     "Rte_Call_NvM_PNJF_NvMBlock_m_b_DriverDoorUnlockSW_JobFinished"],
    ["m_b_ECOptionState", "1", "3", "3", "24", "1", "Dem_m_b_ECOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_b_ECOptionState_JobFinished"],
    ["m_b_TwoTurnAdoptOptionState", "1", "3", "3", "25", "1", "Dem_m_b_TwoTurnAdoptOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_b_TwoTurnAdoptOptionState_JobFinished"],
    ["m_BatteryStateSaved", "4", "3", "3", "26", "4", "Dem_m_BatteryStateSaved",
     "Rte_Call_NvM_PNJF_NvMBlock_m_BatteryStateSaved_JobFinished"],
    ["m_Customer_Basic", "1", "3", "3", "27", "1", "Dem_m_Customer_Basic",
     "Rte_Call_NvM_PNJF_NvMBlock_m_Customer_Basic_JobFinished"],
    ["m_Customer_Mode", "1", "3", "3", "28", "1", "Dem_m_Customer_Mode",
     "Rte_Call_NvM_PNJF_NvMBlock_m_Customer_Mode_JobFinished"],
    ["m_DeadLockUnlockState", "1", "3", "3", "29", "1", "Dem_m_DeadLockUnlockState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_DeadLockUnlockState_JobFinished"],
    ["m_DoorAssembled", "1", "3", "3", "30", "1", "Dem_m_DoorAssembled",
     "Rte_Call_NvM_PNJF_NvMBlock_m_DoorAssembled_JobFinished"],
    ["m_Expected_Current_CCU", "1", "3", "3", "31", "1", "Dem_m_Expected_Current_CCU",
     "Rte_Call_NvM_PNJF_NvMBlock_m_Expected_Current_CCU_JobFinished"],
    ["m_Expected_Current_CCU_forNoSOC", "1", "3", "3", "32", "1", "Dem_m_Expected_Current_CCU_forNoSOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_Expected_Current_CCU_forNoSOC_JobFinished"],
    ["m_Expected_Current_ICU", "1", "3", "3", "33", "1", "Dem_m_Expected_Current_ICU",
     "Rte_Call_NvM_PNJF_NvMBlock_m_Expected_Current_ICU_JobFinished"],
    ["m_Expected_Current_ICU_forNoSOC", "1", "3", "3", "34", "1", "Dem_m_Expected_Current_ICU_forNoSOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_Expected_Current_ICU_forNoSOC_JobFinished"],
    ["m_Expected_UpdateTime", "1", "3", "3", "35", "1", "Dem_m_Expected_UpdateTime",
     "Rte_Call_NvM_PNJF_NvMBlock_m_Expected_UpdateTime_JobFinished"],
    ["m_Expected_UpdateTime_forNoSOC", "1", "3", "3", "36", "1", "Dem_m_Expected_UpdateTime_forNoSOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_Expected_UpdateTime_forNoSOC_JobFinished"],
    ["m_FobLearnt", "1", "3", "3", "37", "1", "Dem_m_FobLearnt", "Rte_Call_NvM_PNJF_NvMBlock_m_FobLearnt_JobFinished"],
    ["m_ForcedPowerOffMode", "4", "3", "3", "38", "4", "Dem_m_ForcedPowerOffMode",
     "Rte_Call_NvM_PNJF_NvMBlock_m_ForcedPowerOffMode_JobFinished"],
    ["m_fqstateFlag", "4", "3", "3", "39", "4", "Dem_m_fqstateFlag",
     "Rte_Call_NvM_PNJF_NvMBlock_m_fqstateFlag_JobFinished"],
    ["m_FqstateNumber", "4", "3", "3", "40", "4", "Dem_m_FqstateNumber",
     "Rte_Call_NvM_PNJF_NvMBlock_m_FqstateNumber_JobFinished"],
    ["m_HazardSwState", "1", "3", "3", "41", "1", "Dem_m_HazardSwState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HazardSwState_JobFinished"],
    ["m_HistoryRecord_AfterFirstReset", "1", "3", "3", "42", "1", "Dem_m_HistoryRecord_AfterFirstReset",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_AfterFirstReset_JobFinished"],
    ["m_HistoryRecord_BAT_SOC_Final", "1", "3", "3", "43", "1", "Dem_m_HistoryRecord_BAT_SOC_Final",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_BAT_SOC_Final_JobFinished"],
    ["m_HistoryRecord_BAT_SOC_First", "4", "3", "3", "44", "4", "Dem_m_HistoryRecord_BAT_SOC_First",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_BAT_SOC_First_JobFinished"],
    ["m_HistoryRecord_BAT_SOC_Last", "4", "3", "3", "45", "4", "Dem_m_HistoryRecord_BAT_SOC_Last",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_BAT_SOC_Last_JobFinished"],
    ["m_HistoryRecord_BAT_SOH_Final", "1", "3", "3", "46", "1", "Dem_m_HistoryRecord_BAT_SOH_Final",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_BAT_SOH_Final_JobFinished"],
    ["m_HistoryRecord_BAT_SOH_First", "4", "3", "3", "47", "4", "Dem_m_HistoryRecord_BAT_SOH_First",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_BAT_SOH_First_JobFinished"],
    ["m_HistoryRecord_BAT_SOH_Last", "4", "3", "3", "48", "4", "Dem_m_HistoryRecord_BAT_SOH_Last",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_BAT_SOH_Last_JobFinished"],
    ["m_HistoryRecord_LongTermLoadCutEventSOC", "4", "3", "3", "49", "4", "Dem_m_HistoryRecord_LongTermLoadCutEventSOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_LongTermLoadCutEventSOC_JobFinished"],
    ["m_HistoryRecord_Number", "4", "3", "3", "50", "4", "Dem_m_HistoryRecord_Number",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_Number_JobFinished"],
    ["m_HistoryRecord_Odometer_Final", "4", "3", "3", "51", "4", "Dem_m_HistoryRecord_Odometer_Final",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_Odometer_Final_JobFinished"],
    ["m_HistoryRecord_Odometer_First", "4", "3", "3", "52", "4", "Dem_m_HistoryRecord_Odometer_First",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_Odometer_First_JobFinished"],
    ["m_HistoryRecord_Odometer_Last", "4", "3", "3", "53", "4", "Dem_m_HistoryRecord_Odometer_Last",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_Odometer_Last_JobFinished"],
    ["m_HistoryRecord_TimeSettingEventRTC", "4", "3", "3", "54", "4", "Dem_m_HistoryRecord_TimeSettingEventRTC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_TimeSettingEventRTC_JobFinished"],
    ["m_HistoryRecord_TimeWakeupEventRTC", "4", "3", "3", "55", "4", "Dem_m_HistoryRecord_TimeWakeupEventRTC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_TimeWakeupEventRTC_JobFinished"],
    ["m_HistoryRecord_TimeWakeupEventSOC", "4", "3", "3", "56", "4", "Dem_m_HistoryRecord_TimeWakeupEventSOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HistoryRecord_TimeWakeupEventSOC_JobFinished"],
    ["m_HODOptionState", "1", "3", "3", "57", "1", "Dem_m_HODOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HODOptionState_JobFinished"],
    ["m_HoodStateMemorySave", "1", "3", "3", "58", "1", "Dem_m_HoodStateMemorySave",
     "Rte_Call_NvM_PNJF_NvMBlock_m_HoodStateMemorySave_JobFinished"],
    ["m_ICUPowerAutoCutModeState", "4", "3", "3", "59", "4", "Dem_m_ICUPowerAutoCutModeState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_ICUPowerAutoCutModeState_JobFinished"],
    ["m_LampLoadAutoCutbySOC", "1", "3", "3", "60", "1", "Dem_m_LampLoadAutoCutbySOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_LampLoadAutoCutbySOC_JobFinished"],
    ["m_LampLoadAutoCutbySOCRecord", "1", "3", "3", "61", "1", "Dem_m_LampLoadAutoCutbySOCRecord",
     "Rte_Call_NvM_PNJF_NvMBlock_m_LampLoadAutoCutbySOCRecord_JobFinished"],
    ["m_LastState_LampLoad", "4", "3", "3", "62", "4", "Dem_m_LastState_LampLoad",
     "Rte_Call_NvM_PNJF_NvMBlock_m_LastState_LampLoad_JobFinished"],
    ["m_LastState_LongTermLoad", "4", "3", "3", "63", "4", "Dem_m_LastState_LongTermLoad",
     "Rte_Call_NvM_PNJF_NvMBlock_m_LastState_LongTermLoad_JobFinished"],
    ["m_LastState_ShortTermLoad", "4", "3", "3", "64", "4", "Dem_m_LastState_ShortTermLoad",
     "Rte_Call_NvM_PNJF_NvMBlock_m_LastState_ShortTermLoad_JobFinished"],
    ["m_LoadAutoCutbySOCRecord", "1", "3", "3", "65", "1", "Dem_m_LoadAutoCutbySOCRecord",
     "Rte_Call_NvM_PNJF_NvMBlock_m_LoadAutoCutbySOCRecord_JobFinished"],
    ["m_LoadAutoCutbySOCRecordCount", "1", "3", "3", "66", "1", "Dem_m_LoadAutoCutbySOCRecordCount",
     "Rte_Call_NvM_PNJF_NvMBlock_m_LoadAutoCutbySOCRecordCount_JobFinished"],
    ["m_LongTermLoadAutoCutbySOC", "1", "3", "3", "67", "1", "Dem_m_LongTermLoadAutoCutbySOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_LongTermLoadAutoCutbySOC_JobFinished"],
    ["m_LongTermLoadAutoCutbySOCRecord", "1", "3", "3", "68", "1", "Dem_m_LongTermLoadAutoCutbySOCRecord",
     "Rte_Call_NvM_PNJF_NvMBlock_m_LongTermLoadAutoCutbySOCRecord_JobFinished"],
    ["m_MFSWOption", "1", "3", "3", "69", "1", "Dem_m_MFSWOption",
     "Rte_Call_NvM_PNJF_NvMBlock_m_MFSWOption_JobFinished"],
    ["m_MoodLampBrightOptionState", "1", "3", "3", "70", "1", "Dem_m_MoodLampBrightOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_MoodLampBrightOptionState_JobFinished"],
    ["m_MoodLampModeOption", "1", "3", "3", "71", "1", "Dem_m_MoodLampModeOption",
     "Rte_Call_NvM_PNJF_NvMBlock_m_MoodLampModeOption_JobFinished"],
    ["m_NaviWakeUp", "1", "3", "3", "72", "1", "Dem_m_NaviWakeUp",
     "Rte_Call_NvM_PNJF_NvMBlock_m_NaviWakeUp_JobFinished"],
    ["m_NonSleepControllerDetect1", "1", "3", "3", "73", "1", "Dem_m_NonSleepControllerDetect1",
     "Rte_Call_NvM_PNJF_NvMBlock_m_NonSleepControllerDetect1_JobFinished"],
    ["m_NonSleepControllerDetect2", "1", "3", "3", "74", "1", "Dem_m_NonSleepControllerDetect2",
     "Rte_Call_NvM_PNJF_NvMBlock_m_NonSleepControllerDetect2_JobFinished"],
    ["m_NonSleepControllerDetect3", "1", "3", "3", "75", "1", "Dem_m_NonSleepControllerDetect3",
     "Rte_Call_NvM_PNJF_NvMBlock_m_NonSleepControllerDetect3_JobFinished"],
    ["m_NonSleepControllerDetect4", "1", "3", "3", "76", "1", "Dem_m_NonSleepControllerDetect4",
     "Rte_Call_NvM_PNJF_NvMBlock_m_NonSleepControllerDetect4_JobFinished"],
    ["m_NonSleepControllerDetect5", "1", "3", "3", "77", "1", "Dem_m_NonSleepControllerDetect5",
     "Rte_Call_NvM_PNJF_NvMBlock_m_NonSleepControllerDetect5_JobFinished"],
    ["m_NonSleepEventCount", "1", "3", "3", "78", "1", "Dem_m_NonSleepEventCount",
     "Rte_Call_NvM_PNJF_NvMBlock_m_NonSleepEventCount_JobFinished"],
    ["m_OneTouchTurnModeState_DriverOne", "1", "3", "3", "79", "1", "Dem_m_OneTouchTurnModeState_DriverOne",
     "Rte_Call_NvM_PNJF_NvMBlock_m_OneTouchTurnModeState_DriverOne_JobFinished"],
    ["m_OneTouchTurnModeState_DriverTwo", "1", "3", "3", "80", "1", "Dem_m_OneTouchTurnModeState_DriverTwo",
     "Rte_Call_NvM_PNJF_NvMBlock_m_OneTouchTurnModeState_DriverTwo_JobFinished"],
    ["m_OneTouchTurnModeState_Guest", "1", "3", "3", "81", "1", "Dem_m_OneTouchTurnModeState_Guest",
     "Rte_Call_NvM_PNJF_NvMBlock_m_OneTouchTurnModeState_Guest_JobFinished"],
    ["m_OneTouchTurnOptionState", "1", "3", "3", "82", "1", "Dem_m_OneTouchTurnOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_OneTouchTurnOptionState_JobFinished"],
    ["m_OTA_Result", "1", "3", "3", "83", "1", "Dem_m_OTA_Result",
     "Rte_Call_NvM_PNJF_NvMBlock_m_OTA_Result_JobFinished"],
    ["m_PersonalizeOption", "1", "3", "3", "84", "1", "Dem_m_PersonalizeOption",
     "Rte_Call_NvM_PNJF_NvMBlock_m_PersonalizeOption_JobFinished"],
    ["m_PSDModeState", "1", "3", "3", "85", "1", "Dem_m_PSDModeState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_PSDModeState_JobFinished"],
    ["m_PSDOptionState", "1", "3", "3", "86", "1", "Dem_m_PSDOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_PSDOptionState_JobFinished"],
    ["m_PTGModeState", "1", "3", "3", "87", "1", "Dem_m_PTGModeState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_PTGModeState_JobFinished"],
    ["m_PTGOptionState", "1", "3", "3", "88", "1", "Dem_m_PTGOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_PTGOptionState_JobFinished"],
    ["m_PTGPSDINDState", "1", "3", "3", "89", "1", "Dem_m_PTGPSDINDState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_PTGPSDINDState_JobFinished"],
    ["m_PTGPSDMode", "1", "3", "3", "90", "1", "Dem_m_PTGPSDMode",
     "Rte_Call_NvM_PNJF_NvMBlock_m_PTGPSDMode_JobFinished"],
    ["m_RemoteStartState", "1", "3", "3", "91", "1", "Dem_m_RemoteStartState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_RemoteStartState_JobFinished"],
    ["m_ShortTermLoadAutoCutbySOC", "1", "3", "3", "92", "1", "Dem_m_ShortTermLoadAutoCutbySOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_ShortTermLoadAutoCutbySOC_JobFinished"],
    ["m_ShortTermLoadAutoCutbySOCRecord", "1", "3", "3", "93", "1", "Dem_m_ShortTermLoadAutoCutbySOCRecord",
     "Rte_Call_NvM_PNJF_NvMBlock_m_ShortTermLoadAutoCutbySOCRecord_JobFinished"],
    ["m_SMKOptionState", "1", "3", "3", "94", "1", "Dem_m_SMKOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_SMKOptionState_JobFinished"],
    ["m_SOCState_after_OTA", "1", "3", "3", "95", "1", "Dem_m_SOCState_after_OTA",
     "Rte_Call_NvM_PNJF_NvMBlock_m_SOCState_after_OTA_JobFinished"],
    ["m_SOCState_before_OTA", "1", "3", "3", "96", "1", "Dem_m_SOCState_before_OTA",
     "Rte_Call_NvM_PNJF_NvMBlock_m_SOCState_before_OTA_JobFinished"],
    ["m_SOCState_forNoSOC", "1", "3", "3", "97", "1", "Dem_m_SOCState_forNoSOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_SOCState_forNoSOC_JobFinished"],
    ["m_SteeringWarmerAutoDownState", "1", "3", "3", "98", "1", "Dem_m_SteeringWarmerAutoDownState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_SteeringWarmerAutoDownState_JobFinished"],
    ["m_TailgateOpenDiagSet", "1", "3", "3", "99", "1", "Dem_m_TailgateOpenDiagSet",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TailgateOpenDiagSet_JobFinished"],
    ["m_TargetRTC", "4", "3", "3", "100", "4", "Dem_m_TargetRTC", "Rte_Call_NvM_PNJF_NvMBlock_m_TargetRTC_JobFinished"],
    ["m_TBAT", "1", "3", "3", "101", "1", "Dem_m_TBAT", "Rte_Call_NvM_PNJF_NvMBlock_m_TBAT_JobFinished"],
    ["m_TBAT_forNoSOC", "1", "3", "3", "102", "1", "Dem_m_TBAT_forNoSOC",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TBAT_forNoSOC_JobFinished"],
    ["m_TransmissionSetState", "1", "3", "3", "103", "1", "Dem_m_TransmissionSetState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TransmissionSetState_JobFinished"],
    ["m_TrunkOpenDiagSet", "1", "3", "3", "104", "1", "Dem_m_TrunkOpenDiagSet",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TrunkOpenDiagSet_JobFinished"],
    ["m_TrunkTCOptionState", "1", "3", "3", "105", "1", "Dem_m_TrunkTCOptionState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TrunkTCOptionState_JobFinished"],
    ["m_TurnSignalSequentialModeState", "1", "3", "3", "106", "1", "Dem_m_TurnSignalSequentialModeState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TurnSignalSequentialModeState_JobFinished"],
    ["m_TwoTurnUnlockModeState", "1", "3", "3", "107", "1", "Dem_m_TwoTurnUnlockModeState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TwoTurnUnlockModeState_JobFinished"],
    ["m_TwoTurnUnlockModeState_DriverOne", "1", "3", "3", "108", "1", "Dem_m_TwoTurnUnlockModeState_DriverOne",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TwoTurnUnlockModeState_DriverOne_JobFinished"],
    ["m_TwoTurnUnlockModeState_DriverTwo", "1", "3", "3", "109", "1", "Dem_m_TwoTurnUnlockModeState_DriverTwo",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TwoTurnUnlockModeState_DriverTwo_JobFinished"],
    ["m_TwoTurnUnlockModeState_Guest", "1", "3", "3", "110", "1", "Dem_m_TwoTurnUnlockModeState_Guest",
     "Rte_Call_NvM_PNJF_NvMBlock_m_TwoTurnUnlockModeState_Guest_JobFinished"],
    ["m_USMHapticMode", "1", "3", "3", "111", "1", "Dem_m_USMHapticMode",
     "Rte_Call_NvM_PNJF_NvMBlock_m_USMHapticMode_JobFinished"],
    ["m_USMMoodLampBright", "1", "3", "3", "112", "1", "Dem_m_USMMoodLampBright",
     "Rte_Call_NvM_PNJF_NvMBlock_m_USMMoodLampBright_JobFinished"],
    ["m_VehicleModeState", "4", "3", "3", "113", "4", "Dem_m_VehicleModeState",
     "Rte_Call_NvM_PNJF_NvMBlock_m_VehicleModeState_JobFinished"],
    ["m_VehicleStatus1", "1", "3", "3", "114", "1", "Dem_m_VehicleStatus1",
     "Rte_Call_NvM_PNJF_NvMBlock_m_VehicleStatus1_JobFinished"],
    ["m_VehicleStatus2", "1", "3", "3", "115", "1", "Dem_m_VehicleStatus2",
     "Rte_Call_NvM_PNJF_NvMBlock_m_VehicleStatus2_JobFinished"],
    ["m_VehicleStatus3", "1", "3", "3", "116", "1", "Dem_m_VehicleStatus3",
     "Rte_Call_NvM_PNJF_NvMBlock_m_VehicleStatus3_JobFinished"],
    ["m_VehicleStatus4", "1", "3", "3", "117", "1", "Dem_m_VehicleStatus4",
     "Rte_Call_NvM_PNJF_NvMBlock_m_VehicleStatus4_JobFinished"],
    ["m_VehicleStatus5", "1", "3", "3", "118", "1", "Dem_m_VehicleStatus5",
     "Rte_Call_NvM_PNJF_NvMBlock_m_VehicleStatus5_JobFinished"],
    ["NvMBlock_PrimaryEventMemory3","5","0","0","119","5","Dem_PrimaryEventMemory[3]",""],
    ["NvMBlock_PrimaryEventMemory4","5","0","0","120","5","Dem_PrimaryEventMemory[4]",""],
    ["NvMBlock_PrimaryEventMemory5","5","0","0","121","5","Dem_PrimaryEventMemory[5]",""],
    ["NvMBlock_PrimaryEventMemory6","5","0","0","122","5","Dem_PrimaryEventMemory[6]",""],
    ["NvMBlock_PrimaryEventMemory7","5","0","0","123","5","Dem_PrimaryEventMemory[7]",""],
    ["NvMBlock_PrimaryEventMemory8","5","0","0","124","5","Dem_PrimaryEventMemory[8]",""],
    ["NvMBlock_PrimaryEventMemory9","5","0","0","125","5","Dem_PrimaryEventMemory[9]",""],
    ["NvMBlock_PrimaryEventMemory10","5","0","0","126","5","Dem_PrimaryEventMemory[10]",""],
    ["NvMBlock_PrimaryEventMemory11","5","0","0","127","5","Dem_PrimaryEventMemory[11]",""],
    ["NvMBlock_PrimaryEventMemory12","5","0","0","128","5","Dem_PrimaryEventMemory[12]",""],
    ["NvMBlock_PrimaryEventMemory13","5","0","0","129","5","Dem_PrimaryEventMemory[13]",""],
    ["NvMBlock_PrimaryEventMemory14","5","0","0","130","5","Dem_PrimaryEventMemory[14]",""],
    ["NvMBlock_PrimaryEventMemory15","5","0","0","131","5","Dem_PrimaryEventMemory[15]",""],
    ["NvMBlock_PrimaryEventMemory16","5","0","0","132","5","Dem_PrimaryEventMemory[16]",""],
    ["NvMBlock_PrimaryEventMemory17","5","0","0","133","5","Dem_PrimaryEventMemory[17]",""],
    ["NvMBlock_PrimaryEventMemory18","5","0","0","134","5","Dem_PrimaryEventMemory[18]",""],
    ["NvMBlock_PrimaryEventMemory19","5","0","0","135","5","Dem_PrimaryEventMemory[19]",""],
    ["NvMBlock_PrimaryEventMemory20","5","0","0","136","5","Dem_PrimaryEventMemory[20]",""],
    ["NvMBlock_PrimaryEventMemory21","5","0","0","137","5","Dem_PrimaryEventMemory[21]",""],
    ["NvMBlock_PrimaryEventMemory22","5","0","0","138","5","Dem_PrimaryEventMemory[22]",""],
    ["NvMBlock_PrimaryEventMemory23","5","0","0","139","5","Dem_PrimaryEventMemory[23]",""],
    ["NvMBlock_PrimaryEventMemory24","5","0","0","140","5","Dem_PrimaryEventMemory[24]",""],
    ["NvMBlock_PrimaryEventMemory25","5","0","0","141","5","Dem_PrimaryEventMemory[25]",""],
    ["NvMBlock_PrimaryEventMemory26","5","0","0","142","5","Dem_PrimaryEventMemory[26]",""],
    ["NvMBlock_PrimaryEventMemory27","5","0","0","143","5","Dem_PrimaryEventMemory[27]",""],
    ["NvMBlock_PrimaryEventMemory28","5","0","0","144","5","Dem_PrimaryEventMemory[28]",""],
    ["NvMBlock_PrimaryEventMemory29","5","0","0","145","5","Dem_PrimaryEventMemory[29]",""],
    ["NvMBlock_PrimaryEventMemory30","5","0","0","146","5","Dem_PrimaryEventMemory[30]",""],
    ["NvMBlock_PrimaryEventMemory31","5","0","0","147","5","Dem_PrimaryEventMemory[31]",""],
    ["NvMBlock_PrimaryEventMemory32","5","0","0","148","5","Dem_PrimaryEventMemory[32]",""],
    ["NvMBlock_PrimaryEventMemory33","5","0","0","149","5","Dem_PrimaryEventMemory[33]",""],
    ["NvMBlock_PrimaryEventMemory34","5","0","0","150","5","Dem_PrimaryEventMemory[34]",""],
    ["NvMBlock_PrimaryEventMemory35","5","0","0","151","5","Dem_PrimaryEventMemory[35]",""],
    ["NvMBlock_PrimaryEventMemory36","5","0","0","152","5","Dem_PrimaryEventMemory[36]",""],
    ["NvMBlock_PrimaryEventMemory37","5","0","0","153","5","Dem_PrimaryEventMemory[37]",""],
    ["NvMBlock_PrimaryEventMemory38","5","0","0","154","5","Dem_PrimaryEventMemory[38]",""],
    ["NvMBlock_PrimaryEventMemory39","5","0","0","155","5","Dem_PrimaryEventMemory[39]",""],
    ["NvMBlock_PrimaryEventMemory40","5","0","0","156","5","Dem_PrimaryEventMemory[40]",""],
    ["NvMBlock_PrimaryEventMemory41","5","0","0","157","5","Dem_PrimaryEventMemory[41]",""],
    ["NvMBlock_PrimaryEventMemory42","5","0","0","158","5","Dem_PrimaryEventMemory[42]",""],
    ["NvMBlock_PrimaryEventMemory43","5","0","0","159","5","Dem_PrimaryEventMemory[43]",""],
    ["NvMBlock_PrimaryEventMemory44","5","0","0","160","5","Dem_PrimaryEventMemory[44]",""],
    ["NvMBlock_PrimaryEventMemory45","5","0","0","161","5","Dem_PrimaryEventMemory[45]",""],
    ["NvMBlock_PrimaryEventMemory46","5","0","0","162","5","Dem_PrimaryEventMemory[46]",""],
    ["NvMBlock_PrimaryEventMemory47","5","0","0","163","5","Dem_PrimaryEventMemory[47]",""],
    ["NvMBlock_PrimaryEventMemory48","5","0","0","164","5","Dem_PrimaryEventMemory[48]",""],
    ["NvMBlock_PrimaryEventMemory49","5","0","0","165","5","Dem_PrimaryEventMemory[49]",""],
    ["NvMBlock_PrimaryEventMemory50","5","0","0","166","5","Dem_PrimaryEventMemory[50]",""],
    ["NvMBlock_PrimaryEventMemory51","5","0","0","167","5","Dem_PrimaryEventMemory[51]",""],
    ["NvMBlock_PrimaryEventMemory52","5","0","0","168","5","Dem_PrimaryEventMemory[52]",""],
    ["NvMBlock_PrimaryEventMemory53","5","0","0","169","5","Dem_PrimaryEventMemory[53]",""],
    ["NvMBlock_PrimaryEventMemory54","5","0","0","170","5","Dem_PrimaryEventMemory[54]",""],
    ["NvMBlock_PrimaryEventMemory55","5","0","0","171","5","Dem_PrimaryEventMemory[55]",""],
    ["NvMBlock_PrimaryEventMemory56","5","0","0","172","5","Dem_PrimaryEventMemory[56]",""],
    ["NvMBlock_PrimaryEventMemory57","5","0","0","173","5","Dem_PrimaryEventMemory[57]",""],
    ["NvMBlock_PrimaryEventMemory58","5","0","0","174","5","Dem_PrimaryEventMemory[58]",""],
    ["NvMBlock_PrimaryEventMemory59","5","0","0","175","5","Dem_PrimaryEventMemory[59]",""],
    ["NvMBlock_PrimaryEventMemory60","5","0","0","176","5","Dem_PrimaryEventMemory[60]",""],
    ["NvMBlock_PrimaryEventMemory61","5","0","0","177","5","Dem_PrimaryEventMemory[61]",""],
    ["NvMBlock_PrimaryEventMemory62","5","0","0","178","5","Dem_PrimaryEventMemory[62]",""],
    ["NvMBlock_PrimaryEventMemory63","5","0","0","179","5","Dem_PrimaryEventMemory[63]",""],
    ["NvMBlock_PrimaryEventMemory64","5","0","0","180","5","Dem_PrimaryEventMemory[64]",""],
    ["NvMBlock_PrimaryEventMemory65","5","0","0","181","5","Dem_PrimaryEventMemory[65]",""],
    ["NvMBlock_PrimaryEventMemory66","5","0","0","182","5","Dem_PrimaryEventMemory[66]",""],
    ["NvMBlock_PrimaryEventMemory67","5","0","0","183","5","Dem_PrimaryEventMemory[67]",""],
    ["NvMBlock_PrimaryEventMemory68","5","0","0","184","5","Dem_PrimaryEventMemory[68]",""],
    ["NvMBlock_PrimaryEventMemory69","5","0","0","185","5","Dem_PrimaryEventMemory[69]",""],
    ["NvMBlock_PrimaryEventMemory70","5","0","0","186","5","Dem_PrimaryEventMemory[70]",""],
    ["NvMBlock_PrimaryEventMemory71","5","0","0","187","5","Dem_PrimaryEventMemory[71]",""],
    ["NvMBlock_PrimaryEventMemory72","5","0","0","188","5","Dem_PrimaryEventMemory[72]",""],
    ["NvMBlock_PrimaryEventMemory73","5","0","0","189","5","Dem_PrimaryEventMemory[73]",""],
    ["NvMBlock_PrimaryEventMemory74","5","0","0","190","5","Dem_PrimaryEventMemory[74]",""],
    ["NvMBlock_PrimaryEventMemory75","5","0","0","191","5","Dem_PrimaryEventMemory[75]",""],
    ["NvMBlock_PrimaryEventMemory76","5","0","0","192","5","Dem_PrimaryEventMemory[76]",""],
    ["NvMBlock_PrimaryEventMemory77","5","0","0","193","5","Dem_PrimaryEventMemory[77]",""],
    ["NvMBlock_PrimaryEventMemory78","5","0","0","194","5","Dem_PrimaryEventMemory[78]",""],
    ["NvMBlock_PrimaryEventMemory79","5","0","0","195","5","Dem_PrimaryEventMemory[79]",""],
    ["NvMBlock_PrimaryEventMemory80","5","0","0","196","5","Dem_PrimaryEventMemory[80]",""],
    ["NvMBlock_PrimaryEventMemory81","5","0","0","197","5","Dem_PrimaryEventMemory[81]",""],
    ["NvMBlock_PrimaryEventMemory82","5","0","0","198","5","Dem_PrimaryEventMemory[82]",""],
    ["NvMBlock_PrimaryEventMemory83","5","0","0","199","5","Dem_PrimaryEventMemory[83]",""],
    ["NvMBlock_PrimaryEventMemory84","5","0","0","200","5","Dem_PrimaryEventMemory[84]",""],
    ["NvMBlock_PrimaryEventMemory85","5","0","0","201","5","Dem_PrimaryEventMemory[85]",""],
    ["NvMBlock_PrimaryEventMemory86","5","0","0","202","5","Dem_PrimaryEventMemory[86]",""],
    ["NvMBlock_PrimaryEventMemory87","5","0","0","203","5","Dem_PrimaryEventMemory[87]",""],
    ["NvMBlock_PrimaryEventMemory88","5","0","0","204","5","Dem_PrimaryEventMemory[88]",""],
    ["NvMBlock_PrimaryEventMemory89","5","0","0","205","5","Dem_PrimaryEventMemory[89]",""],
    ["NvMBlock_PrimaryEventMemory90","5","0","0","206","5","Dem_PrimaryEventMemory[90]",""],
    ["NvMBlock_PrimaryEventMemory91","5","0","0","207","5","Dem_PrimaryEventMemory[91]",""],
    ["NvMBlock_PrimaryEventMemory92","5","0","0","208","5","Dem_PrimaryEventMemory[92]",""],
    ["NvMBlock_PrimaryEventMemory93","5","0","0","209","5","Dem_PrimaryEventMemory[93]",""],
    ["NvMBlock_PrimaryEventMemory94","5","0","0","210","5","Dem_PrimaryEventMemory[94]",""],
    ["NvMBlock_PrimaryEventMemory95","5","0","0","211","5","Dem_PrimaryEventMemory[95]",""],
    ["NvMBlock_PrimaryEventMemory96","5","0","0","212","5","Dem_PrimaryEventMemory[96]",""],
    ["NvMBlock_PrimaryEventMemory97","5","0","0","213","5","Dem_PrimaryEventMemory[97]",""],
    ["NvMBlock_PrimaryEventMemory98","5","0","0","214","5","Dem_PrimaryEventMemory[98]",""],
    ["NvMBlock_PrimaryEventMemory99","5","0","0","215","5","Dem_PrimaryEventMemory[99]",""],
    ["NvMBlock_PrimaryEventMemory100","5","0","0","216","5","Dem_PrimaryEventMemory[100]",""],
    ["NvMBlock_PrimaryEventMemory101","5","0","0","217","5","Dem_PrimaryEventMemory[101]",""],
    ["NvMBlock_PrimaryEventMemory102","5","0","0","218","5","Dem_PrimaryEventMemory[102]",""],
    ["NvMBlock_PrimaryEventMemory103","5","0","0","219","5","Dem_PrimaryEventMemory[103]",""],
    ["NvMBlock_PrimaryEventMemory104","5","0","0","220","5","Dem_PrimaryEventMemory[104]",""],
    ["NvMBlock_PrimaryEventMemory105","5","0","0","221","5","Dem_PrimaryEventMemory[105]",""],
    ["NvMBlock_PrimaryEventMemory106","5","0","0","222","5","Dem_PrimaryEventMemory[106]",""],
    ["NvMBlock_PrimaryEventMemory107","5","0","0","223","5","Dem_PrimaryEventMemory[107]",""],
    ["NvMBlock_PrimaryEventMemory108","5","0","0","224","5","Dem_PrimaryEventMemory[108]",""],
    ["NvMBlock_PrimaryEventMemory109","5","0","0","225","5","Dem_PrimaryEventMemory[109]",""],
    ["NvMBlock_PrimaryEventMemory110","5","0","0","226","5","Dem_PrimaryEventMemory[110]",""],
    ["NvMBlock_PrimaryEventMemory111","5","0","0","227","5","Dem_PrimaryEventMemory[111]",""],
    ["NvMBlock_PrimaryEventMemory112","5","0","0","228","5","Dem_PrimaryEventMemory[112]",""],
    ["NvMBlock_PrimaryEventMemory113","5","0","0","229","5","Dem_PrimaryEventMemory[113]",""],
    ["NvMBlock_PrimaryEventMemory114","5","0","0","230","5","Dem_PrimaryEventMemory[114]",""],
    ["NvMBlock_PrimaryEventMemory115","5","0","0","231","5","Dem_PrimaryEventMemory[115]",""],
    ["NvMBlock_PrimaryEventMemory116","5","0","0","232","5","Dem_PrimaryEventMemory[116]",""],
    ["NvMBlock_PrimaryEventMemory117","5","0","0","233","5","Dem_PrimaryEventMemory[117]",""],
    ["NvMBlock_PrimaryEventMemory118","5","0","0","234","5","Dem_PrimaryEventMemory[118]",""],
    ["NvMBlock_PrimaryEventMemory119","5","0","0","235","5","Dem_PrimaryEventMemory[119]",""],
    ["NvMBlock_PrimaryEventMemory120","5","0","0","236","5","Dem_PrimaryEventMemory[120]",""],
    ["NvMBlock_PrimaryEventMemory121","5","0","0","237","5","Dem_PrimaryEventMemory[121]",""],
    ["NvMBlock_PrimaryEventMemory122","5","0","0","238","5","Dem_PrimaryEventMemory[122]",""],
    ["NvMBlock_PrimaryEventMemory123","5","0","0","239","5","Dem_PrimaryEventMemory[123]",""],
    ["NvMBlock_PrimaryEventMemory124","5","0","0","240","5","Dem_PrimaryEventMemory[124]",""],
    ["NvMBlock_PrimaryEventMemory125","5","0","0","241","5","Dem_PrimaryEventMemory[125]",""],
    ["NvMBlock_PrimaryEventMemory126","5","0","0","242","5","Dem_PrimaryEventMemory[126]",""],
    ["NvMBlock_PrimaryEventMemory127","5","0","0","243","5","Dem_PrimaryEventMemory[127]",""],
    ["NvMBlock_PrimaryEventMemory128","5","0","0","244","5","Dem_PrimaryEventMemory[128]",""],
    ["NvMBlock_PrimaryEventMemory129","5","0","0","245","5","Dem_PrimaryEventMemory[129]",""],
    ["NvMBlock_PrimaryEventMemory130","5","0","0","246","5","Dem_PrimaryEventMemory[130]",""],
    ["NvMBlock_PrimaryEventMemory131","5","0","0","247","5","Dem_PrimaryEventMemory[131]",""],
    ["NvMBlock_PrimaryEventMemory132","5","0","0","248","5","Dem_PrimaryEventMemory[132]",""],
    ["NvMBlock_PrimaryEventMemory133","5","0","0","249","5","Dem_PrimaryEventMemory[133]",""],
    ["NvMBlock_PrimaryEventMemory134","5","0","0","250","5","Dem_PrimaryEventMemory[134]",""],
    ["NvMBlock_PrimaryEventMemory135","5","0","0","251","5","Dem_PrimaryEventMemory[135]",""],
    ["NvMBlock_PrimaryEventMemory136","5","0","0","252","5","Dem_PrimaryEventMemory[136]",""],
    ["NvMBlock_PrimaryEventMemory137","5","0","0","253","5","Dem_PrimaryEventMemory[137]",""],
    ["NvMBlock_PrimaryEventMemory138","5","0","0","254","5","Dem_PrimaryEventMemory[138]",""],
    ["NvMBlock_PrimaryEventMemory139","5","0","0","255","5","Dem_PrimaryEventMemory[139]",""],
    ["NvMBlock_PrimaryEventMemory140","5","0","0","256","5","Dem_PrimaryEventMemory[140]",""],
    ["NvMBlock_PrimaryEventMemory141","5","0","0","257","5","Dem_PrimaryEventMemory[141]",""],
    ["NvMBlock_PrimaryEventMemory142","5","0","0","258","5","Dem_PrimaryEventMemory[142]",""],
    ["NvMBlock_PrimaryEventMemory143","5","0","0","259","5","Dem_PrimaryEventMemory[143]",""],
    ["NvMBlock_PrimaryEventMemory144","5","0","0","260","5","Dem_PrimaryEventMemory[144]",""],
    ["NvMBlock_PrimaryEventMemory145","5","0","0","261","5","Dem_PrimaryEventMemory[145]",""],
    ["NvMBlock_PrimaryEventMemory146","5","0","0","262","5","Dem_PrimaryEventMemory[146]",""],
    ["NvMBlock_PrimaryEventMemory147","5","0","0","263","5","Dem_PrimaryEventMemory[147]",""],
    ["NvMBlock_PrimaryEventMemory148","5","0","0","264","5","Dem_PrimaryEventMemory[148]",""],
    ["NvMBlock_PrimaryEventMemory149","5","0","0","265","5","Dem_PrimaryEventMemory[149]",""],
    ["NvMBlock_PrimaryEventMemory150","5","0","0","266","5","Dem_PrimaryEventMemory[150]",""],
    ["NvMBlock_PrimaryEventMemory151","5","0","0","267","5","Dem_PrimaryEventMemory[151]",""],
    ["NvMBlock_PrimaryEventMemory152","5","0","0","268","5","Dem_PrimaryEventMemory[152]",""],
    ["NvMBlock_PrimaryEventMemory153","5","0","0","269","5","Dem_PrimaryEventMemory[153]",""],
    ["NvMBlock_PrimaryEventMemory154","5","0","0","270","5","Dem_PrimaryEventMemory[154]",""],
    ["NvMBlock_PrimaryEventMemory155","5","0","0","271","5","Dem_PrimaryEventMemory[155]",""],
    ["NvMBlock_PrimaryEventMemory156","5","0","0","272","5","Dem_PrimaryEventMemory[156]",""],
    ["NvMBlock_PrimaryEventMemory157","5","0","0","273","5","Dem_PrimaryEventMemory[157]",""],
    ["NvMBlock_PrimaryEventMemory158","5","0","0","274","5","Dem_PrimaryEventMemory[158]",""],
    ["NvMBlock_PrimaryEventMemory159","5","0","0","275","5","Dem_PrimaryEventMemory[159]",""],
    ["NvMBlock_PrimaryEventMemory160","5","0","0","276","5","Dem_PrimaryEventMemory[160]",""],
    ["NvMBlock_PrimaryEventMemory161","5","0","0","277","5","Dem_PrimaryEventMemory[161]",""],
    ["NvMBlock_PrimaryEventMemory162","5","0","0","278","5","Dem_PrimaryEventMemory[162]",""],
    ["NvMBlock_PrimaryEventMemory163","5","0","0","279","5","Dem_PrimaryEventMemory[163]",""],
    ["NvMBlock_PrimaryEventMemory164","5","0","0","280","5","Dem_PrimaryEventMemory[164]",""],
    ["NvMBlock_PrimaryEventMemory165","5","0","0","281","5","Dem_PrimaryEventMemory[165]",""],
    ["NvMBlock_PrimaryEventMemory166","5","0","0","282","5","Dem_PrimaryEventMemory[166]",""],
    ["NvMBlock_PrimaryEventMemory167","5","0","0","283","5","Dem_PrimaryEventMemory[167]",""],
    ["NvMBlock_PrimaryEventMemory168","5","0","0","284","5","Dem_PrimaryEventMemory[168]",""],
    ["NvMBlock_PrimaryEventMemory169","5","0","0","285","5","Dem_PrimaryEventMemory[169]",""],
    ["NvMBlock_PrimaryEventMemory170","5","0","0","286","5","Dem_PrimaryEventMemory[170]",""],
    ["NvMBlock_PrimaryEventMemory171","5","0","0","287","5","Dem_PrimaryEventMemory[171]",""],
    ["NvMBlock_PrimaryEventMemory172","5","0","0","288","5","Dem_PrimaryEventMemory[172]",""],
    ["NvMBlock_PrimaryEventMemory173","5","0","0","289","5","Dem_PrimaryEventMemory[173]",""],
    ["NvMBlock_PrimaryEventMemory174","5","0","0","290","5","Dem_PrimaryEventMemory[174]",""],
    ["NvMBlock_PrimaryEventMemory175","5","0","0","291","5","Dem_PrimaryEventMemory[175]",""],
    ["NvMBlock_PrimaryEventMemory176","5","0","0","292","5","Dem_PrimaryEventMemory[176]",""],
    ["NvMBlock_PrimaryEventMemory177","5","0","0","293","5","Dem_PrimaryEventMemory[177]",""],
    ["NvMBlock_PrimaryEventMemory178","5","0","0","294","5","Dem_PrimaryEventMemory[178]",""],
    ["NvMBlock_PrimaryEventMemory179","5","0","0","295","5","Dem_PrimaryEventMemory[179]",""],
    ["NvMBlock_PrimaryEventMemory180","5","0","0","296","5","Dem_PrimaryEventMemory[180]",""],
    ["NvMBlock_PrimaryEventMemory181","5","0","0","297","5","Dem_PrimaryEventMemory[181]",""],
    ["NvMBlock_PrimaryEventMemory182","5","0","0","298","5","Dem_PrimaryEventMemory[182]",""],
    ["NvMBlock_PrimaryEventMemory183","5","0","0","299","5","Dem_PrimaryEventMemory[183]",""],
    ["NvMBlock_PrimaryEventMemory184","5","0","0","300","5","Dem_PrimaryEventMemory[184]",""],
    ["NvMBlock_PrimaryEventMemory185","5","0","0","301","5","Dem_PrimaryEventMemory[185]",""],
    ["NvMBlock_PrimaryEventMemory186","5","0","0","302","5","Dem_PrimaryEventMemory[186]",""],
    ["NvMBlock_PrimaryEventMemory187","5","0","0","303","5","Dem_PrimaryEventMemory[187]",""],
    ["NvMBlock_PrimaryEventMemory188","5","0","0","304","5","Dem_PrimaryEventMemory[188]",""],
    ["NvMBlock_PrimaryEventMemory189","5","0","0","305","5","Dem_PrimaryEventMemory[189]",""],
    ["NvMBlock_PrimaryEventMemory190","5","0","0","306","5","Dem_PrimaryEventMemory[190]",""],
    ["NvMBlock_PrimaryEventMemory191","5","0","0","307","5","Dem_PrimaryEventMemory[191]",""],
    ["NvMBlock_PrimaryEventMemory192","5","0","0","308","5","Dem_PrimaryEventMemory[192]",""],
    ["NvMBlock_PrimaryEventMemory193","5","0","0","309","5","Dem_PrimaryEventMemory[193]",""],
    ["NvMBlock_PrimaryEventMemory194","5","0","0","310","5","Dem_PrimaryEventMemory[194]",""],
    ["NvMBlock_PrimaryEventMemory195","5","0","0","311","5","Dem_PrimaryEventMemory[195]",""],
    ["NvMBlock_PrimaryEventMemory196","5","0","0","312","5","Dem_PrimaryEventMemory[196]",""],
    ["NvMBlock_PrimaryEventMemory197","5","0","0","313","5","Dem_PrimaryEventMemory[197]",""],
    ["NvMBlock_PrimaryEventMemory198","5","0","0","314","5","Dem_PrimaryEventMemory[198]",""],
    ["NvMBlock_PrimaryEventMemory199","5","0","0","315","5","Dem_PrimaryEventMemory[199]",""],
    ["NvMBlock_PrimaryEventMemory200","5","0","0","316","5","Dem_PrimaryEventMemory[200]",""],
    ["NvMBlock_PrimaryEventMemory201","5","0","0","317","5","Dem_PrimaryEventMemory[201]",""],
    ["NvMBlock_PrimaryEventMemory202","5","0","0","318","5","Dem_PrimaryEventMemory[202]",""],
    ["NvMBlock_PrimaryEventMemory203","5","0","0","319","5","Dem_PrimaryEventMemory[203]",""],
    ["NvMBlock_PrimaryEventMemory204","5","0","0","320","5","Dem_PrimaryEventMemory[204]",""],
    ["NvMBlock_PrimaryEventMemory205","5","0","0","321","5","Dem_PrimaryEventMemory[205]",""],
    ["NvMBlock_PrimaryEventMemory206","5","0","0","322","5","Dem_PrimaryEventMemory[206]",""],
]
nvm_inform_dict = {
                    'SHORT-NAME':'NvMBlock_SerialNumber',
                    'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor',
                    'DEST':'ECUC-PARAM-CONF-CONTAINER-DEF',
                    'SUB-DATAS':[
                        {'PARAMETER-VALUES':'ECUC-TEXTUAL-PARAM-VALUE',     'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMBlockManagementType',   'DEST':'ECUC-ENUMERATION-PARAM-DEF',    'VALUE':'NVM_BLOCK_REDUNDANT'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMNvBlockNum',            'DEST':'ECUC-INTEGER-PARAM-DEF',        'VALUE':'2'},
                        {'PARAMETER-VALUES':'ECUC-TEXTUAL-PARAM-VALUE',     'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMBlockCrcType',          'DEST':'ECUC-ENUMERATION-PARAM-DEF',    'VALUE':'NVM_CRC16'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMBlockUseCrc',           'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'1'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMCalcRamBlockCrc',       'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'1'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMNvBlockBaseNumber',     'DEST':'ECUC-INTEGER-PARAM-DEF',        'VALUE':'13'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMNvramBlockIdentifier',  'DEST':'ECUC-INTEGER-PARAM-DEF',        'VALUE':'13'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMNvBlockLength',         'DEST':'ECUC-INTEGER-PARAM-DEF',        'VALUE':'10'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMWriteVerificationDataSize','DEST':'ECUC-INTEGER-PARAM-DEF',     'VALUE':'10'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMBlockJobPriority',      'DEST':'ECUC-INTEGER-PARAM-DEF',        'VALUE':'1'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMSelectBlockForReadAll', 'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'1'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMSelectBlockForWriteAll','DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-TEXTUAL-PARAM-VALUE',     'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMRamBlockDataAddress',   'DEST':'ECUC-STRING-PARAM-DEF',         'VALUE':'Dem_SerialNumber'},
                        {'PARAMETER-VALUES':'ECUC-TEXTUAL-PARAM-VALUE',     'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMSingleBlockCallback',   'DEST':'ECUC-FUNCTION-NAME-DEF',        'VALUE':'Rte_Call_NvM_PNJF_NvMBlock_SerialNumber_JobFinished'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMRomBlockNum',           'DEST':'ECUC-INTEGER-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMResistantToChangedSw',  'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMWriteBlockOnce',        'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMBlockWriteProt',        'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMStaticBlockIDCheck',    'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMWriteVerification',     'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMNvramDeviceId',         'DEST':'ECUC-INTEGER-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMBswMBlockStatusInformation','DEST':'ECUC-BOOLEAN-PARAM-DEF',    'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMBlockUseSyncMechanism', 'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMDefaultROMCRCEnabled',  'DEST':'ECUC-BOOLEAN-PARAM-DEF',        'VALUE':'0'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMMaxNumOfReadRetries',   'DEST':'ECUC-INTEGER-PARAM-DEF',        'VALUE':'1'},
                        {'PARAMETER-VALUES':'ECUC-NUMERICAL-PARAM-VALUE',   'DEFINITION-REF':'/AUTRON/NvM/NvMBlockDescriptor/NvMMaxNumOfWriteRetries',  'DEST':'ECUC-INTEGER-PARAM-DEF',        'VALUE':'1'},
                    ]
                  }

TEST = 'test'


def make_SUB_CONTAINERS_FUNC(PARA0):
    UUID0 = str(uuid.uuid4())
    UUID1 = str(uuid.uuid4())
    sub_containers = f'''
                  <SUB-CONTAINERS>
                    <ECUC-CONTAINER-VALUE UUID="{UUID0}">
                      <SHORT-NAME>NvMTargetBlockReference</SHORT-NAME>
                      <DEFINITION-REF DEST="ECUC-CHOICE-CONTAINER-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMTargetBlockReference</DEFINITION-REF>
                      <SUB-CONTAINERS>
                        <ECUC-CONTAINER-VALUE UUID="{UUID1}">
                          <SHORT-NAME>NvMFeeRef</SHORT-NAME>
                          <DEFINITION-REF DEST="ECUC-PARAM-CONF-CONTAINER-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMTargetBlockReference/NvMFeeRef</DEFINITION-REF>
                          <REFERENCE-VALUES>
                            <ECUC-REFERENCE-VALUE>
                              <DEFINITION-REF DEST="ECUC-SYMBOLIC-NAME-REFERENCE-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMTargetBlockReference/NvMFeeRef/NvMNameOfFeeBlock</DEFINITION-REF>
                              <VALUE-REF DEST="ECUC-CONTAINER-VALUE">/Fee/Fee/FeeBlock_{PARA0}</VALUE-REF>
                            </ECUC-REFERENCE-VALUE>
                          </REFERENCE-VALUES>
                        </ECUC-CONTAINER-VALUE>
                      </SUB-CONTAINERS>
                    </ECUC-CONTAINER-VALUE>
                  </SUB-CONTAINERS>
                  '''
    return sub_containers

def extract_inform_dict():
    index = 0
    inform_dict=[]
    for i in nvm_list:
        temp_inform_dict = type_inform_dict
        temp_inform_dict['SHORT-NAME'] = i[0]
        temp_inform_dict['NvMWriteVerificationDataSize'] = i[1]
        temp_inform_dict['NvMMaxNumOfReadRetries'] = i[2]
        temp_inform_dict['NvMMaxNumOfWriteRetries'] = i[3]
        temp_inform_dict['NvMNvBlockBaseNumber'] = str(int(i[4]) + 14)           #OFFSET 결정 로직 추가해야함(일단 임시로 진행)
        temp_inform_dict['NvMNvramBlockIdentifier'] = str(int(i[4]) + 14)           #OFFSET 결정 로직 추가해야함(일단 임시로 진행)
        temp_inform_dict['NvMNvBlockLength'] = i[5]
        temp_inform_dict['NvMRamBlockDataAddress'] = i[6]
        temp_inform_dict['NvMSingleBlockCallback'] = i[7]
        temp_inform_dict['NvMNameOfFeeBlock'] = "FeeBlock_" + temp_inform_dict['SHORT-NAME']
        index=index+1
        if index <= len(nvm_list):
            inform_dict.append(temp_inform_dict.copy())     #만들어진 Dictionary 자료형 데이터를 붙임
    return inform_dict

def make_inform_dict_FUNC():
    temp_inform_dict =[
        {
            'SHORT-NAME': 'testtesttest',
            'NvMBlockManagementType': 'NVM_BLOCK_REDUNDANT',
            'NvMNvBlockNum': '2',
            'NvMBlockCrcType': 'NVM_CRC16',
            'NvMBlockUseCrc': '1',
            'NvMCalcRamBlockCrc': '1',
            'NvMNvBlockBaseNumber': '13',
            'NvMNvramBlockIdentifier': '13',
            'NvMNvBlockLength': '10',
            'NvMWriteVerificationDataSize': '10',
            'NvMBlockJobPriority': '1',
            'NvMSelectBlockForReadAll': '1',
            'NvMSelectBlockForWriteAll': '0',
            'NvMRamBlockDataAddress': '',
            'NvMSingleBlockCallback': '',
            'NvMRomBlockNum': '0',
            'NvMResistantToChangedSw': '0',
            'NvMWriteBlockOnce': '0',
            'NvMBlockWriteProt': '0',
            'NvMStaticBlockIDCheck': '0',
            'NvMWriteVerification': '0',
            'NvMNvramDeviceId': '0',
            'NvMBswMBlockStatusInformation': '0',
            'NvMBlockUseSyncMechanism': '0',
            'NvMDefaultROMCRCEnabled': '0',
            'NvMMaxNumOfReadRetries': '1',
            'NvMMaxNumOfWriteRetries': '1',
            'NvMNameOfFeeBlock': ''
         }
    ]
    return temp_inform_dict

def make_ECUC_CONTAINER_VALUE_FUNC(data):
    temp_data = ''
    #for data in inform_dict:
    PARA0 = data["SHORT-NAME"]
    PARA1 = data["NvMBlockManagementType"]
    PARA2 = data["NvMNvBlockNum"]
    PARA3 = data["NvMBlockCrcType"]
    PARA4 = data["NvMBlockUseCrc"]
    PARA5 = data["NvMCalcRamBlockCrc"]
    PARA6 = data["NvMNvBlockBaseNumber"]
    PARA7 = data["NvMNvramBlockIdentifier"]
    PARA8 = data["NvMNvBlockLength"]
    PARA9 = data["NvMWriteVerificationDataSize"]
    PARA10 = data["NvMBlockJobPriority"]
    PARA11 = data["NvMSelectBlockForReadAll"]
    PARA12 = data["NvMSelectBlockForWriteAll"]
    PARA13 = data["NvMRamBlockDataAddress"]
    PARA14 = data["NvMSingleBlockCallback"]
    PARA15 = data["NvMRomBlockNum"]
    PARA16 = data["NvMResistantToChangedSw"]
    PARA17 = data["NvMWriteBlockOnce"]
    PARA18 = data["NvMBlockWriteProt"]
    PARA19 = data["NvMStaticBlockIDCheck"]
    PARA20 = data["NvMWriteVerification"]
    PARA21 = data["NvMNvramDeviceId"]
    PARA22 = data["NvMBswMBlockStatusInformation"]
    PARA23 = data["NvMBlockUseSyncMechanism"]
    PARA24 = data["NvMDefaultROMCRCEnabled"]
    PARA25 = data["NvMMaxNumOfReadRetries"]
    PARA26 = data["NvMMaxNumOfWriteRetries"]
    PARA27 = data["NvMNameOfFeeBlock"]

    UUID0 = str(uuid.uuid4())
    UUID1 = str(uuid.uuid4())
    #PARA13 = PARA0
    #PARA14 = PARA0
    #PARA27 = PARA0
    sub_containers = \
        f'''<ECUC-CONTAINER-VALUE UUID="{UUID0}">
              <SHORT-NAME>NvMBlock_{PARA0}</SHORT-NAME>
              <DEFINITION-REF DEST="ECUC-PARAM-CONF-CONTAINER-DEF">/AUTRON/NvM/NvMBlockDescriptor</DEFINITION-REF>
              <PARAMETER-VALUES>
                <ECUC-TEXTUAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-ENUMERATION-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMBlockManagementType</DEFINITION-REF>
                  <VALUE>{PARA1}</VALUE>
                </ECUC-TEXTUAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMNvBlockNum</DEFINITION-REF>
                  <VALUE>{PARA2}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-TEXTUAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-ENUMERATION-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMBlockCrcType</DEFINITION-REF>
                  <VALUE>{PARA3}</VALUE>
                </ECUC-TEXTUAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMBlockUseCrc</DEFINITION-REF>
                  <VALUE>{PARA4}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMCalcRamBlockCrc</DEFINITION-REF>
                  <VALUE>{PARA5}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMNvBlockBaseNumber</DEFINITION-REF>
                  <VALUE>{PARA6}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMNvramBlockIdentifier</DEFINITION-REF>
                  <VALUE>{PARA7}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMNvBlockLength</DEFINITION-REF>
                  <VALUE>{PARA8}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMWriteVerificationDataSize</DEFINITION-REF>
                  <VALUE>{PARA9}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMBlockJobPriority</DEFINITION-REF>
                  <VALUE>{PARA10}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMSelectBlockForReadAll</DEFINITION-REF>
                  <VALUE>{PARA11}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMSelectBlockForWriteAll</DEFINITION-REF>
                  <VALUE>{PARA12}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-TEXTUAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-STRING-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMRamBlockDataAddress</DEFINITION-REF>
                  <VALUE>{PARA13}</VALUE>
                </ECUC-TEXTUAL-PARAM-VALUE>
                <ECUC-TEXTUAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-FUNCTION-NAME-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMSingleBlockCallback</DEFINITION-REF>
                  <VALUE>{PARA14}</VALUE>
                </ECUC-TEXTUAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMRomBlockNum</DEFINITION-REF>
                  <VALUE>{PARA15}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMResistantToChangedSw</DEFINITION-REF>
                  <VALUE>{PARA16}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMWriteBlockOnce</DEFINITION-REF>
                  <VALUE>{PARA17}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMBlockWriteProt</DEFINITION-REF>
                  <VALUE>{PARA18}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMStaticBlockIDCheck</DEFINITION-REF>
                  <VALUE>{PARA19}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMWriteVerification</DEFINITION-REF>
                  <VALUE>{PARA20}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMNvramDeviceId</DEFINITION-REF>
                  <VALUE>{PARA21}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMBswMBlockStatusInformation</DEFINITION-REF>
                  <VALUE>{PARA22}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMBlockUseSyncMechanism</DEFINITION-REF>
                  <VALUE>{PARA23}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-BOOLEAN-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMDefaultROMCRCEnabled</DEFINITION-REF>
                  <VALUE>{PARA24}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMMaxNumOfReadRetries</DEFINITION-REF>
                  <VALUE>{PARA25}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
                <ECUC-NUMERICAL-PARAM-VALUE>
                  <DEFINITION-REF DEST="ECUC-INTEGER-PARAM-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMMaxNumOfWriteRetries</DEFINITION-REF>
                  <VALUE>{PARA26}</VALUE>
                </ECUC-NUMERICAL-PARAM-VALUE>
              </PARAMETER-VALUES>
              <SUB-CONTAINERS>
                <ECUC-CONTAINER-VALUE UUID="{UUID1}">
                  <SHORT-NAME>NvMTargetBlockReference</SHORT-NAME>
                  <DEFINITION-REF DEST="ECUC-CHOICE-CONTAINER-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMTargetBlockReference</DEFINITION-REF>
                  <SUB-CONTAINERS>
                    <ECUC-CONTAINER-VALUE UUID="b2a21922-8d0a-4bd2-9d54-7fab46ac477d">
                      <SHORT-NAME>NvMFeeRef</SHORT-NAME>
                      <DEFINITION-REF DEST="ECUC-PARAM-CONF-CONTAINER-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMTargetBlockReference/NvMFeeRef</DEFINITION-REF>
                      <REFERENCE-VALUES>
                        <ECUC-REFERENCE-VALUE>
                          <DEFINITION-REF DEST="ECUC-SYMBOLIC-NAME-REFERENCE-DEF">/AUTRON/NvM/NvMBlockDescriptor/NvMTargetBlockReference/NvMFeeRef/NvMNameOfFeeBlock</DEFINITION-REF>
                          <VALUE-REF DEST="ECUC-CONTAINER-VALUE">/Fee/Fee/{PARA27}</VALUE-REF>
                        </ECUC-REFERENCE-VALUE>
                      </REFERENCE-VALUES>
                    </ECUC-CONTAINER-VALUE>
                  </SUB-CONTAINERS>
                </ECUC-CONTAINER-VALUE>
              </SUB-CONTAINERS>
            </ECUC-CONTAINER-VALUE>'''
        #temp_data = temp_data +'%n'+ sub_containers
    return sub_containers
nvm_inform_dict = make_inform_dict_FUNC()

# sub_containers = ET.XML(make_SUB_CONTAINERS_FUNC('KimJinchoel'))

extracted_inform_dict = extract_inform_dict()           # 임시 text 문서에 정리된 nvm 리스트 속성을 불러옴
#print(extracted_inform_dict)
#indent(extracted_inform_dict)
#ET.dump(extracted_inform_dict)
containers=ET.Element(root.iter('CONTAINERS'))
# containers=ET.Element(root.iter('CONTAINERS'))
# temp_xml = ET.XML(make_ECUC_CONTAINER_VALUE_FUNC(type_inform_dict))
# #ET.dump(temp_xml)
# #containers.append(temp_xml)
# ET.SubElement(containers,'제발좀돼었으면')
# # ET.dump(root)
# ET.SubElement(root,'제발좀돼라!')
# ET.dump(root)
index = 0           # 해당 태그의 마지막
#for CONTAINERS in root.iter('CONTAINERS'):      # CONTAINERS라는 태그를 찾아서 마지막에 원하는 XML을 추가
for CONTAINERS in root.iter('CONTAINERS'):  # CONTAINERS라는 태그를 찾아서 마지막에 원하는 XML을 추가
    for elements in CONTAINERS:
        index = index + 1
        if len(CONTAINERS) <= index:            # 태그의 마지막 엘리먼트를 찾기 위해(더 좋은 방법 있을 것으로 생각되는데 찾아볼 필요 있음)
            print('========================================================================')
            # elements.append(add_root)
            # elements.append(sub_containers)
            for data in extracted_inform_dict:  # 불러온 Dictionary List를 xml로 변환하여 추가
                temp_xml = make_ECUC_CONTAINER_VALUE_FUNC(data)
                #print(temp_xml)
                ecuc_container_value = ET.XML(temp_xml)
                #ET.dump(ecuc_container_value)
                elements.append(ecuc_container_value)
                #elements.insert(len(CONTAINERS),ecuc_container_value)
# for data in extracted_inform_dict:                      # 불러온 Dictionary List를 xml로 변환하여 추가
#     temp_xml = make_ECUC_CONTAINER_VALUE_FUNC(data)
#     print(temp_xml)
#     ecuc_container_value = ET.XML(temp_xml)

#================================================================== test code ===============================
# parameter_dtc0 = 'NVM_BLOCK_REDUNDANT'
# parameter_dtc1 = '2'
# add_root = ET.Element('ECUC-CONTAINER-VALUE')           #설정 값 셋팅 시작
# add_root.set('UUID',str(uuid.uuid4()))                  #UUID 셋팅
# short_name = ET.SubElement(add_root,'SHORT-NAME')
# short_name.text = nvm_inform_dict['SHORT-NAME']
# definition_ref = ET.SubElement(add_root,'DEFINITION-REF')
# definition_ref.set('DEST', nvm_inform_dict['DEST'])
# definition_ref.text = nvm_inform_dict['DEFINITION-REF']
# parameter_values = ET.SubElement(add_root,'PARAMETER-VALUES')
# index=0
# for parameters in nvm_inform_dict['SUB-DATAS']:
#     parameter = ET.SubElement(parameter_values,nvm_inform_dict['SUB-DATAS'][index]['PARAMETER-VALUES'])
#     parameter_sub0 = ET.SubElement(parameter,'DEFINITION-REF')
#     parameter_sub0.set('DEST', nvm_inform_dict['SUB-DATAS'][index]['DEST'])
#     parameter_sub0.text = nvm_inform_dict['SUB-DATAS'][index]['DEFINITION-REF']
#     parameter_sub1 = ET.SubElement(parameter,'VALUE')
#     parameter_sub1.text = nvm_inform_dict['SUB-DATAS'][index]['VALUE']
#     #print(parameters)
#     index=index+1
#
# ET.dump(add_root)
#
# i = 0
# for CONTAINERS in add_root:
#     i=1
#     #print(CONTAINERS.tag, CONTAINERS.attrib)


# for CONTAINERS in root.iter('CONTAINERS'):
#     for elements in CONTAINERS:
#         elements.append(add_root)
#         elements.append(sub_containers)

# print('start')
# for CONTAINERS in root.iter('CONTAINERS'):
#     for elements in CONTAINERS:
#         for element in elements:
#             i=2
#             #print(element.tag, element.attrib)
# print('end')

indent(root)
#ET.dump(root)
#ET.ElementTree.write('C:\\test_python_making_arxml\\new.xml',root)
tree = ElementTree(root)
# xmlstr = minidom.parseString(ET.tostring(root)).toprettyxml(indent="  ")
#xmlns:ns0="http://autosar.org/schema/r4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://autosar.org/schema/r4.0 autosar_4-0-3.xsd"

tree.write('c:\\test_python_making_arxml\\'+'new'+'.xml')
# with open('c:\\test_python_making_arxml\\new1.arxml','w') as f:
#     f.write(xmlstr)